name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Pull repo
        uses: actions/checkout@v2
      # Runs a set of commands using the runner's shell
      - name: Script
        run: |
          curl -LO https://repo.maven.apache.org/maven2/com/google/googlejavaformat/google-java-format/1.13.0/google-java-format-1.13.0-all-deps.jar
          java \
          --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
          --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \
          --add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \
          --add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED \
          -jar google-java-format-1.13.0-all-deps.jar src/app/*.java test/app/*.java
  Build:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Pull repo
        uses: actions/checkout@v2
      - name: Script
        run: javac -d bin src/app/*.java
      - name: Cache build artifacts
        uses: actions/cache@v2
        id: build-artifacts
        with:
          path: bin
          key: ${{ runner.os }}-build-artifacts
  Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Pull repo
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/cache@v2
        id: build-artifacts
        with:
          path: bin
          key: ${{ runner.os }}-build-artifacts
      - name: Script
        run: |
          curl -LO https://repo.maven.apache.org/maven2/org/junit/platform/junit-platform-console-standalone/1.8.2/junit-platform-console-standalone-1.8.2.jar
          javac -d bin -cp bin:junit-platform-console-standalone-1.8.2.jar test/app/*.java
          java -jar junit-platform-console-standalone-1.8.2.jar --class-path=bin --scan-classpath --fail-if-no-tests
      - name: Cache test artifacts
        id: test-artifacts
        uses: actions/cache@v2
        with:
          path: bin
          key: ${{ runner.os }}-test-artifacts
      - name: Cache junit jar
        id: junit-jar
        uses: actions/cache@v2
        with:
          path: junit-platform-console-standalone-1.8.2.jar
          key: ${{ runner.os }}-junit-jar
  Cover:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Pull repo
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/cache@v2
        id: build-artifacts
        with:
          path: bin
          key: ${{ runner.os }}-build-artifacts
      - name: Download test artifacts
        uses: actions/cache@v2
        id: test-artifacts
        with:
          path: bin
          key: ${{ runner.os }}-test-artifacts
      - name: Download junit jar
        uses: actions/cache@v2
        id: junit-jar
        with:
          path: junit-platform-console-standalone-1.8.2.jar
          key: ${{ runner.os }}-junit-jar
      - name: Script
        run: |
          curl -LO https://repo.maven.apache.org/maven2/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar
          curl -LO https://repo.maven.apache.org/maven2/org/jacoco/org.jacoco.cli/0.8.7/org.jacoco.cli-0.8.7-nodeps.jar
          java -javaagent:org.jacoco.agent-0.8.7-runtime.jar -jar junit-platform-console-standalone-1.8.2.jar --class-path=bin --scan-classpath --fail-if-no-tests
          rm bin/app/*Test.class bin/app/Driver.class
          java -jar org.jacoco.cli-0.8.7-nodeps.jar report jacoco.exec --classfiles bin --sourcefiles src --html coverage-report
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage-report
  Package:
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - name: Pull repo
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/cache@v2
        id: build-artifacts
        with:
          path: bin
          key: ${{ runner.os }}-build-artifacts
      - name: Script
        run: |
          cd bin
          mkdir META-INF
          echo -e "Manifest-Version":" 1.0\nMain-Class":" app.Driver\n" > META-INF/MANIFEST.MF
          jar -cmf META-INF/MANIFEST.MF ../blogging-project.jar app/*.class
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: blogging-project.jar
          path: blogging-project.jar
